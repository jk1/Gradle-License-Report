plugins {
    id 'idea'
    id 'groovy'
    id 'signing'
    alias(libs.plugins.gradle.pluginPublish)
    alias(libs.plugins.license)
}

group = 'com.github.jk1'
version = '2.9.1-SNAPSHOT'  // x-release-please-version
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

tasks.withType(AbstractCompile).configureEach {
    options.release = 8
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)

    sign publishing.publications
}

tasks.withType(Sign) {
    onlyIf("isReleaseVersion is set") { isReleaseVersion }
}

dependencies {
    implementation(localGroovy())

    testImplementation(platform(libs.junit.bom))
    testImplementation(platform(libs.spock.bom))
    testImplementation(libs.spock.core) {
        exclude group: 'org.codehaus.groovy'
    }
    testRuntimeOnly(libs.junit.platformSuiteEngine)
    testRuntimeOnly(libs.junit.platformLauncher)
}

idea {
    module {
        downloadSources = true
        outputDir = layout.buildDirectory.dir("idea/main").get().asFile
        testOutputDir = layout.buildDirectory.dir("idea/test").get().asFile
    }
}

license {
    header = rootProject.file("NOTICE.txt") 
    includes(["**/*.groovy"])
}

test {
    useJUnitPlatform()

    testLogging {
        events "started", "passed", "skipped", "failed"
    }

    systemProperty("spock.snapshots.rootPath", "src/test/resources")
    systemProperty("spock.snapshots.updateSnapshots", !System.getenv("CI"))
    systemProperty("spock.snapshots.writeActualSnapshotOnMismatch", !System.getenv("CI"))

    reports.html.required = true
    reports.junitXml.required = System.getenv("CI") != null ? true : false
}

// local maven publishing to ease development
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.jk1.dependency-license-report'
            artifactId = 'com.github.jk1.dependency-license-report.gradle.plugin'
            from components.java
        }
    }
}

// release publishing to gradle plugin repo
gradlePlugin {
    website = 'https://github.com/jk1/Gradle-License-Report'
    vcsUrl = 'https://github.com/jk1/Gradle-License-Report'
    plugins {
        licenseReportPlugin {
            id = 'com.github.jk1.dependency-license-report'
            displayName = 'Gradle dependency license report plugin'
            description = 'A plugin for generating reports about the licenses of the dependencies for your Gradle project'
            tags.set(['dependency-management', 'license', 'reporting'])
            implementationClass = 'com.github.jk1.license.LicenseReportPlugin'
        }
    }
}
